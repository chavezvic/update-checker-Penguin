# Author: Victor Chavez
# GitHub: chavezvic

import os
import subprocess

def get_linux_distribution():
    try:
        return subprocess.check_output(['lsb_release', '-ds']).decode().strip()
    except FileNotFoundError:
        return "Unknown"

def get_kernel_version():
    return os.uname().release

def get_installed_packages():
    try:
        return subprocess.check_output(['dpkg', '--get-selections']).decode().split('\n')
    except FileNotFoundError:
        return []

def get_security_updates():
    try:
        return subprocess.check_output(['apt-get', 'upgrade', '--just-print']).decode().split('\n')
    except FileNotFoundError:
        return []

def check_update_needed():
    try:
        distribution = get_linux_distribution()
        kernel_version = get_kernel_version()
        
        print()
        print(f" Distribution: \033[1m{distribution}\033[0m")
        print(f" Kernel Version: \033[1m{kernel_version}\033[0m\n")
        
        installed_versions = {
            "Fedora": "5.6.1",
            "Debian": "5.6.1",
            "Alpine": "5.6.1-r2",
            "Kali": "5.6.1",
            "OpenSUSE": "5.6.1",
            "Arch Linux": "5.6.0-1"
        }
        
        if distribution:
            print(f" Hello, Linux lover! üêß\n")
            print(f" Ah, I see you're rocking \033[1m{distribution}\033[0m. Impressive choice! \n")
            
            # Check if distribution needs an update based on installed version
            if distribution in installed_versions:
                installed_version = installed_versions[distribution]
                affected_versions = ["5.6.0", "5.6.1"]
                if any(version in installed_version for version in affected_versions):
                    print(f" Your {distribution} version \033[1m({installed_version})\033[0m may need an update. Hurry up! \n")  # Display version in bold
                else:
                    print(" Your distribution seems up-to-date. No updates needed for now! \n")
            else:
                print(" Your distribution is not affected by \033[1mCVE-2024-3094\033[0m. No updates needed for now! \n")
        else:
            print(" Failed to retrieve distribution information. Better luck next time!")
    
    except Exception as e:
        print(" An error occurred while checking for updates. Better luck next time!\n", e)

if __name__ == "__main__":
    check_update_needed()

